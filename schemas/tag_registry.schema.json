{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://primal-hunter.local/schemas/tag_registry.schema.json",
  "title": "Tag Registry",
  "description": "Canonical tag registry grouped by domain with lifecycle metadata.",
  "type": "object",
  "additionalProperties": false,
  "required": ["version", "tags"],
  "properties": {
    "version": {
      "type": "string",
      "description": "Semantic version of the registry payload."
    },
    "tags": {
      "type": "array",
      "description": "Flat list of tag definitions.",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "category",
          "label",
          "status",
          "allow_inferred",
          "scope",
          "definition",
          "generator_instruction"
        ],
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^[a-z0-9_\\.]+$",
            "description": "Stable tag identifier (e.g. tag.narrative_style.dry_humor)."
          },
          "category": {
            "type": "string",
            "enum": [
              "narrative_style",
              "character_tone",
              "scene_function",
              "system_mechanic",
              "lore_topic",
              "power_scaling"
            ]
          },
          "label": {
            "type": "string",
            "description": "Human-readable short name."
          },
          "status": {
            "type": "string",
            "enum": ["approved", "candidate", "deprecated"]
          },
          "allow_inferred": {
            "type": "boolean",
            "description": "If true, tag may be applied via inference rather than direct quote."
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["scene", "line", "character_default"]
            },
            "uniqueItems": true,
            "description": "Where this tag may be applied."
          },
          "definition": {
            "type": "string",
            "description": "One-line definition of the tag."
          },
          "use_when": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Positive guidance examples."
          },
          "not_when": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Negative guidance examples."
          },
          "generator_instruction": {
            "type": "string",
            "description": "Instruction that changes model behavior when this tag is active."
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["scene_id"],
              "additionalProperties": false,
              "properties": {
                "scene_id": {
                  "type": "string",
                  "pattern": "^\\d{2}\\.\\d{2}\\.\\d{2}$"
                },
                "line": {
                  "type": "integer",
                  "minimum": 1
                },
                "excerpt": {
                  "type": "string",
                  "maxLength": 320
                }
              }
            }
          },
          "aliases": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-z0-9_\\.]+$"
            },
            "uniqueItems": true
          },
          "notes": {
            "type": "string"
          }
        }
      }
    }
  }
}
